{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///J:/Dev/patisserie/components/providers.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { SessionProvider } from 'next-auth/react'\r\n\r\ninterface ProvidersProps {\r\n  children: React.ReactNode\r\n}\r\n\r\nexport function Providers({ children }: ProvidersProps) {\r\n  return (\r\n    <SessionProvider>\r\n      {children}\r\n    </SessionProvider>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAQO,SAAS,UAAU,EAAE,QAAQ,EAAkB;IACpD,qBACE,8OAAC,iKAAe;kBACb;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///J:/Dev/patisserie/components/ui/sonner.tsx"],"sourcesContent":["\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner, ToasterProps } from \"sonner\"\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      style={\n        {\n          \"--normal-bg\": \"var(--popover)\",\n          \"--normal-text\": \"var(--popover-foreground)\",\n          \"--normal-border\": \"var(--border)\",\n        } as React.CSSProperties\n      }\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,IAAA,4JAAQ;IAErC,qBACE,8OAAC,mJAAM;QACL,OAAO;QACP,WAAU;QACV,OACE;YACE,eAAe;YACf,iBAAiB;YACjB,mBAAmB;QACrB;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///J:/Dev/patisserie/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///J:/Dev/patisserie/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Separator }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACkD;IACrD,qBACE,8OAAC,6KAAuB;QACtB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,IAAA,kHAAE,EACX,kKACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///J:/Dev/patisserie/hooks/use-site-config.ts"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\n\r\ninterface SiteConfig {\r\n  name: string\r\n  description: string\r\n  contactEmail: string\r\n}\r\n\r\nexport function useSiteConfig() {\r\n  const [config, setConfig] = useState<SiteConfig>({\r\n    name: 'Pâtisserie',\r\n    description: 'recueil de recettes du lycée Georges Frêches',\r\n    contactEmail: 'contact@patisserie.fr'\r\n  })\r\n\r\n  useEffect(() => {\r\n    const loadConfig = async () => {\r\n      try {\r\n        const response = await fetch('/api/admin/settings')\r\n        if (response.ok) {\r\n          const data = await response.json()\r\n          setConfig({\r\n            name: data.name,\r\n            description: data.description,\r\n            contactEmail: data.contactEmail\r\n          })\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur lors du chargement de la configuration:', error)\r\n      }\r\n    }\r\n\r\n    loadConfig()\r\n  }, [])\r\n\r\n  return config\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;AAUO,SAAS;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iNAAQ,EAAa;QAC/C,MAAM;QACN,aAAa;QACb,cAAc;IAChB;IAEA,IAAA,kNAAS,EAAC;QACR,MAAM,aAAa;YACjB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM;gBAC7B,IAAI,SAAS,EAAE,EAAE;oBACf,MAAM,OAAO,MAAM,SAAS,IAAI;oBAChC,UAAU;wBACR,MAAM,KAAK,IAAI;wBACf,aAAa,KAAK,WAAW;wBAC7B,cAAc,KAAK,YAAY;oBACjC;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,kDAAkD;YAClE;QACF;QAEA;IACF,GAAG,EAAE;IAEL,OAAO;AACT","debugId":null}}]
}